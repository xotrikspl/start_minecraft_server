#!/bin/bash
version="Beta 0.7"

locale="usr/skyhard" # server location
locale_plugins="usr/skyhard/plugins" # server plugins
locale_backup="tmp/minecraft_server/backup" # backup location
locale_mysql="tmp/minecraft_server/sql" # mysql backup location
data=$(date "+%d-%m-%Y_%H-%M-%S") # date

export TERM=xterm

red="\033[0;31m"
green="\033[1;32m"
blue="\033[1;34m"
yellow="\033[1;33m"
purple="\033[1;35m"
end="\033[0m"

#---SERVER BEGIN----#
jar="purpur.jar"    # name jar(server engine)
ram=(-Xms1G -Xmx1G) # min, max
#---SERVER END------#

#---SCREEN BEGIN---#
scr="-DmS"         # argument
name="server"      # name screen (screen -r server)
#---SCREEN END-----#

#---BACKUP MYSQL BEGIN---#
database=(test test2 test3 test4)
#---BACKUP MYSQL END-----#

## check pv and screen
if dpkg --list | grep screen pv < /dev/null; then
    sleep 0.5;
else
    echo -e "${green}I install pv and screen${end}"
    apt-get install screen pv -y
fi

## start_server --run
function normal_start(){
    read -p "Enter the name of the server (the name of the server to pass screen) > " n_scr
    echo -e "${green}Starting ($n_scr)${end}";
    cd $locale && clear && screen $scr $n_scr java ${ram[*]} -jar $jar
    screen -r $n_scr
}
## chceck server
function check_server(){
    if ps -x | grep $jar < /dev/null; then
        echo -e "${green}Server is ON${end}"
    else
        echo -e "${red}Server is OFF${end}"
        read -rep "${purple}Do you want to turn on the server? (Y/N) > " off_server
        case $off_server in
        "y")
            echo -e "${green}Starting the server..${end}" && sleep 2;
            start ;;
        "n")
            clear && echo -e "${red}I understand .. I'll wait until you agree to start${end}" ;;
        esac
    fi
}

#---SERVICE BEGIN---#
function start(){
    cd $locale && clear && screen $scr $name java ${ram[*]} -jar $jar
}
function stop(){
    if ps -x | grep $jar < /dev/null; then
        echo -e "${red}Kill server..${end}" && pkill $jar
    fi
}
function restart(){
    if ps -x | grep $jar < /dev/null; then
        echo -e "${blue}Restaring a server... wait a one second${end}"
        pkill $jar && start_server --start
    else
        echo -e "You don't have a server running"
    fi
}
#---SERVICE END-----#

#---ARGUMENT BEGIN---#
function delete_old_logs(){ ## logs deleted every 3 days
    find $locale_plugins -atime +3 -type f -name '*.log' -delete && sleep 1 && find $locale -atime +3 -type f -name '*.log.gz' -delete
    echo -e "${green}Completed successfully${end}"
}
function delete_old_backup(){ ## backup deleted every 7 days
    find $locale_backup -atime +7 -type f -name '*.tar.gz' -delete
    echo -e "${green}Completed successfully${end}"
}
function backup(){ ## the script runs every 1 days
    cd $locale_mysql && mysqldump --databases ${database[*]} > db_backup.sql < /dev/null

    cd / && tar cf - $locale $locale_mysql | pv -s $(($(du -sk $locale | awk '(print $1)') * 1024)) | grep > backup_$data.tar.gz
        #---CHECK FOLDER--#
        if [ -e /tmp/minecraft_server ]; then
            sleep 0.5;
        else
            cd /tmp && mkdir minecraft_server;
            if [ -e $locale_backup ] && [ -e $locale_mysql ]; then
                sleep 0.5;
            else
                cd /tmp/minecraft_server && mkdir backup sql
            fi
        fi

    cd / && mv -f /backup_$data.tar.gz $locale_backup < /dev/null
    # find old backup mysql
    find $locale_mysql -type f -name '*.sql' -delete
    echo -e "${green}Completed successfully${end}"
}
#---ARGUMENT END-----#

# These are arguments to do automatically turn on the server after restarting VPS/VDS
if [ "$1" = "--start" ]; then
    clear && sleep 0.5 && start;
elif [ "$1" = "--stop" ]; then
    clear && sleep 0.5 && stop;
elif [ "$1" = "--restart" ]; then
    clear && sleep 0.5 && restart;
elif [ "$1" = "--run" ]; then
    clear && sleep 0.5 && normal_start;
elif [ "$1" = "--dl" ]; then
    clear && sleep 0.5 && delete_old_logs;
elif [ "$1" = "--db" ]; then
    clear && sleep 0.5 && delete_old_backup;
elif [ "$1" = "--c" ]; then
    clear && sleep 0.5 && check_server;
elif [ "$1" = "--b" ]; then
    clear && sleep 0.5 && backup;
fi